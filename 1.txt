1. Тестовая среда (Test Env) – это комбинация аппаратной и программной среды, в которой будут выполняться тесты. Он включает в себя конфигурацию оборудования, настройки операционной системы, конфигурацию программного обеспечения, тестовые терминалы и другую поддержку для выполнения теста. 
Готовность тестовой среды может быть подтверждена дымовыми испытаниями и проведена командой QA. Критериями вступления на этом этапе являются предоставление плана тестирования, готовность к приему тестов на дым и подготовка тестовых данных.
Критерии выхода из этого этапа состоят в том, что тестовая среда должна быть готова и тестирование дыма должно быть успешно выполнено с ожидаемыми результатами.
2. Различие между Build и Release. 
Основное различие Build и Release в тестировании программного обеспечения заключается в том, что Build - это версия программного обеспечения, которую команда разработчиков передает команде тестирования для целей тестирования, а Release - это программное обеспечение, которое команда тестирования передает клиенту. 
3. Основные фазы тестирования.
В процессе тестирования выделяют следующие фазы:
1) Определение целей (требований к тестированию), включающее следующую конкретизацию: какие части системы будут тестироваться, какие аспекты их работы будут выбраны для проверки, каково желаемое качество и т.п.
2) Планирование: создание графика (расписания) разработки тестов для каждой тестируемой подсистемы; оценка необходимых человеческих, программных и аппаратных ресурсов; разработка расписания тестовых циклов. Важно отметить, что расписание тестирования обязательно должно быть согласовано с расписанием разработки создаваемой системы, поскольку наличие исполняемой версии разрабатываемой системы ( Implementation Under Testing (IUT) или Application Under Testing (AUT) – часто употребляемые обозначения для тестируемой системы) является одним из необходимых условий тестирования, что создает взаимозависимость в работе команд тестировщиков и разработчиков.
3) Разработка тестов, то есть тестового кода для тестируемой системы, если необходимо - кода системы автоматизации тестирования и тестовых процедур (выполняемых вручную).
4) Выполнение тестов: реализация тестовых циклов.
5) Анализ результатов.
После анализа результатов возможно повторение процесса тестирования, начиная с пунктов 3, 2 или даже 1.
4. Импакт анализ (Impact Analysis) - инструмент в разработке ПО, которая применяется программистами для улучшения тестирования. Основная идея импакт анализа - это указание затронутых мест в проекте при разработке новой или изменении старой функциональности.
5. Критерии выбора тестов

